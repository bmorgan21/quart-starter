version: '3.8'

services:
  app:
    restart: always
    image: quart-starter-app
    build:
      context: .
      target: prod

    ports:
      - "8080:8080"

    environment:
      SECRET_KEY: ${SECRET_KEY-my secret key}

      DB_NAME: ${POSTGRES_DB_NAME-postgres}
      DB_HOST: ${POSTGRES_DB_HOST-db}
      DB_PASSWORD: ${POSTGRES_DB_PASSWPRD-postgres}
      DB_USER: ${POSTGRES_DB_USER-postgres}
      DB_PORT: ${POSTGRES_DB_PORT-5432}
      QUART_AUTH_COOKIE_SECURE: "False"
    
    profiles:
      - full

    depends_on:
      db:
        condition: service_healthy

  db-setup:
    image: quart-starter-app
    environment:
      SECRET_KEY: ${SECRET_KEY-my secret key}

      DB_NAME: ${POSTGRES_DB_NAME-postgres}
      DB_HOST: ${POSTGRES_DB_HOST-db}
      DB_PASSWORD: ${POSTGRES_DB_PASSWORD-postgres}
      DB_USER: ${POSTGRES_DB_USER-postgres}
      DB_PORT: ${POSTGRES_DB_PORT-5432}
    profiles:
      - full
    depends_on:
      db:
        condition: service_healthy

    command: sh -c "/venv/bin/aerich upgrade"

  db:
    restart: always
    image: postgres:latest
    volumes:
      - postgres-data:/var/lib/postgresql/data
    environment:
      PGUSER: postgres
      POSTGRES_USER: postgres
      POSTGRES_DB: postgres
      POSTGRES_PASSWORD: postgres

    profiles:
      - full

    healthcheck:
      test: ["CMD-SHELL", "pg_isready"]
      interval: 10s
      timeout: 5s
      retries: 5

  redis:
    restart: always
    image: redis/redis-stack
    volumes:
      - redis-data:/data

    profiles:
      - full

volumes:
  postgres-data:
  redis-data:
